<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.IpWhitelistMapper">

    <resultMap type="IpWhitelist" id="IpWhitelistResult">
        <result property="id"    column="id"    />
        <result property="platformId"    column="platform_id"    />
        <result property="type"    column="type"    />
        <result property="ip"    column="ip"    />
        <result property="status"    column="status"    />
        <result property="remark"    column="remark"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="platformName"    column="platformName"    />
    </resultMap>

    <sql id="selectIpWhitelistVo">
        select id, platform_id, type, ip, status, remark, create_time, update_time from t_ip_whitelist
    </sql>

    <select id="selectIpWhitelistList" parameterType="IpWhitelist" resultMap="IpWhitelistResult">
         select a.*,b.name as platformName from t_ip_whitelist a left join t_platform b on a.platform_id = b.id
        <where>
            <if test="platformId != null "> and a.platform_id = #{platformId}</if>
            <if test="platformName != null  and platformName != ''"> and b.name like concat('%', #{platformName}, '%')</if>
            <if test="type != null "> and a.type = #{type}</if>
            <if test="ip != null  and ip != ''"> and a.ip = #{ip}</if>
            <if test="status != null "> and a.status = #{status}</if>
             <if test="ids != null and ids.length > 0">
                 and a.id in
                 <foreach collection="ids" item="id" open="(" close=")" separator="," index="i">
                     #{id}
                 </foreach>
             </if>
        </where>
        order by a.create_time desc
    </select>

    <select id="selectIpWhitelistById" parameterType="Long" resultMap="IpWhitelistResult">
        <include refid="selectIpWhitelistVo"/>
        where id = #{id}
    </select>

    <insert id="insertIpWhitelist" parameterType="IpWhitelist" useGeneratedKeys="true" keyProperty="id">
        insert into t_ip_whitelist
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="platformId != null">platform_id,</if>
            <if test="type != null">type,</if>
            <if test="ip != null and ip != ''">ip,</if>
            <if test="status != null">status,</if>
            <if test="remark != null">remark,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="platformId != null">#{platformId},</if>
            <if test="type != null">#{type},</if>
            <if test="ip != null and ip != ''">#{ip},</if>
            <if test="status != null">#{status},</if>
            <if test="remark != null">#{remark},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateIpWhitelist" parameterType="IpWhitelist">
        update t_ip_whitelist
        <trim prefix="SET" suffixOverrides=",">
            <if test="platformId != null">platform_id = #{platformId},</if>
            <if test="type != null">type = #{type},</if>
            <if test="ip != null and ip != ''">ip = #{ip},</if>
            <if test="status != null">status = #{status},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteIpWhitelistById" parameterType="Long">
        delete from t_ip_whitelist where id = #{id}
    </delete>

    <delete id="deleteIpWhitelistByIds" parameterType="String">
        delete from t_ip_whitelist where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>
